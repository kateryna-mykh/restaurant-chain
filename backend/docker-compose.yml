version: "3.9"

services:
  postgres:
    image: postgres:16
    restart: always
    container_name: postgres
    env_file: ./.env
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=chain_db
    ports:
      - $DB_LOCAL_PORT:$DB_DOCKER_PORT
    volumes:
      - ./data:/var/lib/postgresql/data
      - .src/main/resources/db/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - backend-java-network
  backend-app:
    depends_on:
      - postgres
    restart: on-failure
    image: backend
    build: .
    env_file: ./.env
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url" : "jdbc:postgresql://postgres:$DB_DOCKER_PORT/chain_db",
        "spring.datasource.username" : "$POSTGRES_USER",
        "spring.datasource.password" : "$POSTGRES_PASSWORD"}'
    networks:
      - backend-java-network

networks:
  backend-java-network:
    external: true
    name: app_network